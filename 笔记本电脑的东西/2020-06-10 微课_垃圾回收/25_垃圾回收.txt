经典书籍
《深入理解Java虚拟机》

分代的概念

新生成的对象，存储到Eden
  当Eden存满了，会触发Minor GC = Young GC
  剩余的存活对象，移动到Survivor的From区

  当From区存满了，将对象移动到Survivor的To区

在每一次GC (Garbage Collection)时，都记录了对象
的存活年龄，如果超过的指定值(如15)，代表是长期存活
的对象，移动到老年代中。还有一种情况是，如果同一年龄
的对象占用超过年轻代的一半，则移动此年龄及以上的对象
到老年代中。

除此之外，如果对象是大对象（存年轻代存不进去），也
会直接存储到老年代中。

如果老年代存满了，会触发Major GC。
Full GC 清理整个堆空间，包括年轻代和老年代。


垃圾回收算法

1）标记-清除
可回收的对象被标记出来
统一回收对象，但会产生内存碎片，不利于后续对象的存储。

2）复制 (适用于年轻代)
将内存划分为两块，在标记清除后，将剩余的对象拷贝到
另一个块内存中，解决碎片的问题，但是空间利用率低。

3）标记-整理 (适用于老年代)
标记 - 清除 - 整理  将碎片重新整理为连续的


垃圾回收器？












