
类加载，将类的.class文件，二进制数据读入到内存中。
放入运行时数据区的方法区内，在堆中创建class对象，
来封装类在方法区的数据结构。


加载 - 连接 - 初始化 - 使用 - 卸载
  
   连接：  验证 - 准备 - 解析


1）加载
a. 通过类的全限定名（包名+类名 = 绝对路径）找到并获取二进制字节流
b. 把字节流对应的静态存储结构，转化为方法区的运行时数据结构
c. 在堆中生成，代表此类的class对象，是方法区中数据的访问入口

2）连接
  验证：文件格式、字节码、元数据、符号引用是不是符合要求。
  准备：为类的静态变量分配内存，初始化为默认值。
  解析：将符号引用（变量名）转换为直接引用（变量地址）

3）初始化
  类的初始化，静态变量的赋值，静态代码块的执行等等



双亲委派模型

如果一个类加载器收到了请求，首先不会自己加载。
把请求委托给父加载器，依次向上，所有加载请求，
都会传递到顶层的加载器中。
只有当父加载器无法找到所需加载类的时候，
子加载器才会自行加载。


意义：
是一种带有优先级的加载层次。
避免用户自定义类和系统类的加载冲突，达到统一和安全。